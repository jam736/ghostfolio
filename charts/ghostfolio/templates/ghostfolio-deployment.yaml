apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -f docker-compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: ghostfolio
  name: ghostfolio
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ghostfolio
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -f docker-compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: ghostfolio
    spec:
      containers:
        - image: ghostfolio/ghostfolio:latest
          name: ghostfolio
          ports:
            - containerPort: 31888
              hostPort: 31888
              protocol: TCP
          env:
            - name: ACCESS_TOKEN_SALT
              valueFrom:
                configMapKeyRef:
                  key: ACCESS_TOKEN_SALT
                  name: env
            - name: COMPOSE_PROJECT_NAME
              valueFrom:
                configMapKeyRef:
                  key: COMPOSE_PROJECT_NAME
                  name: env
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_URL
                  name: env
            - name: JWT_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET_KEY
                  name: env
            - name: NODE_ENV
              value: production
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: env
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PASSWORD
                  name: env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: env
          livenessProbe:
            exec:
              command:
                - "curl -f http://localhost:{{ .Values.ghostfolioport }}/api/v1/health"
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
      restartPolicy: Always
